use std::collections::HashMap;
impl Solution {
    pub fn max_subsequence(nums: Vec<i32>, k: i32) -> Vec<i32> {
        let mut arr_cpy = Vec::with_capacity(nums.len());
        for i in 0..nums.len(){
            arr_cpy.push(nums[i]);
        }
        arr_cpy.sort();

        let mut map : HashMap<i32, i32> = HashMap::new();
        for i in (arr_cpy.len()-k as usize)..arr_cpy.len(){
            *map.entry(arr_cpy[i]).or_insert(0) += 1;
        }

        let mut ans = Vec::with_capacity(k as usize);

        for i in 0..nums.len(){
            if let Some(&val) = map.get(&nums[i]) {
                if val > 0 {
                    ans.push(nums[i]);
                    map.insert(nums[i], val - 1);
                }
            }
        }

        return ans;
    }
}
